.PHONY: target_directories
.SUFFIXES: .c .o .h .mk
#################################################################################
#################### COMPILATION CONSTANTS:
CC            = gcc
ROOT_DIR     ?= $(CURDIR)
SRC_DIR      ?= src
TARGET_DIR   ?= target
#################################################################################
#################### FILENAME FUNCTIONS:
define getDependsFileNameFromSrc
	$(addprefix $(TARGET_DIR)/, $(patsubst %.c, %.mk, $1))
endef

define getObjFileNameFromSrc
	$(addprefix $(TARGET_DIR)/, $(patsubst %.c, %.o, $1))
endef
#################################################################################
#################### COMPILATION AUTOGENERATED VARIABLES:
ifneq ($(MAKECMDGOALS),clean)
SOURCES       = $(shell find "$(SRC_DIR)" -name "*.c";)
OBJECTS       = $(call getObjFileNameFromSrc,$(SOURCES))
TARGET_DIRS   = $(sort $(dir OBJECTS))
DEPENDENCIES  = $(call getDependsFileNameFromSrc,$(SOURCES))

-include $(DEPENDENCIES)
endif
#################################################################################
#################### STATIC PATTERN RULES:
BASIC.c = $(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH)
LINK.c  = $(BASIC.c) $(LDFLAGS)

$(TARGET_DIR)/%.o: %.c
	$(BASIC.c) -c -o $@ $<

$(TARGET_DIR)/%.mk: %.c
	$(BASIC.c) -MM $< -MT $(call getObjFileNameFromSrc, $<) -MF $@

$(TARGET_DIR)/lib$(SHARED_LIB_NM).so: $(OBJECTS)
	$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@

target_directories: $(TARGET_DIR) $(TARGET_DIRS)
#################################################################################
#################### CREATING TARGET DIRS:
$(TARGET_DIRS): %:
	@mkdir -p $@
	@echo "Directory: $@ created."

ifeq ($(ROOT_DIR),$(CURDIR))
$(TARGET_DIR):
	@mkdir $@
	@echo "Directory: $@ created."
else
$(TARGET_DIR):
	@ln -s $(addprefix $(ROOT_DIR)/, $(TARGET_DIR)) $@
endif
#################################################################################
